
# Create a separate user 
sudo useradd -m -d /home/tmsadm -c "TensorFlow Administrator" tmsadm  
sudo passwd tmsadm
sudo bash -c 'echo "tmsadm ALL=(ALL) NOPASSWD: ALL" >>/etc/sudoers'
sudo su -l tmsadm

# Setting up HANA clients
/usr/sap/HXE/home/bin/HXEDownloadManager_linux.bin linuxx86_64 installer -d ~ clients_linux_x86_64.tgz
tar -xvzf ~/clients_linux_x86_64.tgz -C ~/.
tar -xvzf ~/hdb_client_linux_x86_64.tgz -C ~
~/HDB_CLIENT_LINUX_X86_64/hdbinst
# Accept the prompts default values to configure your installation:
cd ~/
echo "export PATH=\$PATH:/home/tmsadm/sap/hdbclient" >> ~/.profile
source .profile

# Install AFL
cd /usr/sap/HXE/home/bin
hxe_gc.sh
HXEDownloadManager_linux.bin linuxx86_64 vm eml.tgz
tar -xvzf eml.tgz
~/HANA_EXPRESS_20/install_eml.sh

sudo su - hxeadm -c '/usr/sap/HXE/home/bin/hxe_gc.sh'

#Complete registration for SUSE

sudo zypper addrepo https://download.opensuse.org/repositories/editors/SLE_12_SP3/editors.repo
sudo zypper refresh
sudo zypper install \
    wget  \
    git   \
	nano
	
python get-pip.py --user
cd ~/
echo "export PATH=\$PATH:/home/tmsadm/.local/bin" >> ~/.profile
source .profile

pip install --user virtualenv
cd ~/
virtualenv --python=python2.7 --system-site-packages ~/tms
source ~/tms/bin/activate

pip install --user /home/tmsadm/sap/hdbclient/hdbcli-2.3.119.tar.gz
pip install --user 'tensorflow==1.8'
pip install --user 'tensorflow-serving-api==1.12.0'	

mkdir -p ~/export
First, create the following empty model configuration file ~/export/models.config and add the following content:
model_config_list: {
}

curl https://download.docker.com/linux/static/stable/x86_64/docker-18.09.0.tgz -o docker-18.09.0.tgz
tar xzvf /path/to/<FILE>.tar.gz
sudo cp docker/* /usr/bin/
sudo dockerd &
sudo docker run hello-world
# An informational message will pop up. Docker daemon is running.
# Now we have to kill the Docker daemon as we are going to set it up a service. 
ps -a
sudo kill -9 <dockerd PID>

# Setting up dockerd as a service
sudo nano /etc/systemd/system/docker2.service
# Copy the text below into the file
[Unit]
Description = Docker

[Service]
ExecStart=/usr/bin/dockerd -H unix:// -H tcp://127.0.0.1:2375

# Press Ctrl+X to save and exit Nano

sudo systemctl enable docker
sudo systemctl daemon-reload
sudo systemctl restart docker.service
sudo systemctl status docker.service

# More info: https://docs.docker.com/install/linux/linux-postinstall/#configuring-remote-access-with-daemonjson

sudo docker run \
  -p 8500:8500 \
  --mount type=bind,source=/home/tmsadm/export/models.config,target=/tf_models/config/models.config \
  --mount type=bind,source=/home/tmsadm/export,target=/tf_models \
  --entrypoint "/bin/sh" tensorflow/serving:1.6.1 -c "tensorflow_model_server --port=8500 --model_config_file=/tf_models/config/models.config" &
  
  
# Connect to the HXE tenant using the SYSTEM user credentials and execute the following SQL statement:
GRANT AFL__SYS_AFL_EML_EXECUTE TO ML_USER;
GRANT SELECT, UPDATE, DELETE, INSERT ON  _SYS_AFL.EML_MODEL_CONFIGURATION TO ML_USER;

# Connect to the HXE tenant using the ML_USER user credentials
# Confirm that AFL is installed properly
SELECT * FROM SYS.AFL_PACKAGES;
# Query should return 6 rows

CREATE REMOTE SOURCE "TensorFlow" ADAPTER "grpc" CONFIGURATION 'server=localhost;port=8500';
# Now that the remote source was added, you will need to reload the EML configuration as this one is loaded once at the SAP HANA, express edition startup time.
CREATE SCHEMA EML_DATA;
SET SCHEMA EML_DATA;
-- Uncomment the following lines if you want to re-run the script
-- DROP TABLE UPDATE_CONFIGURATION_PARAMS;
-- DROP TABLE UPDATE_CONFIGURATION_RESULT;
-- DROP PROCEDURE UPDATE_CONFIGURATION;

CREATE TABLE UPDATE_CONFIGURATION_PARAMS ("Parameter" VARCHAR(100), "Value" VARCHAR(100));
CREATE TABLE UPDATE_CONFIGURATION_RESULT ("Key" VARCHAR(100), "Value" INTEGER, "Text" VARCHAR(100));
CREATE PROCEDURE UPDATE_CONFIGURATION() AS
BEGIN
    DECLARE CURSOR CUR FOR
        SELECT VOLUME_ID FROM SYS.M_VOLUMES WHERE SERVICE_NAME = 'indexserver';
    FOR CUR_ROW AS CUR DO
        EXEC 'CALL _SYS_AFL.EML_CTL_PROC(''UpdateModelConfiguration'', UPDATE_CONFIGURATION_PARAMS, UPDATE_CONFIGURATION_RESULT)'
            || ' WITH OVERVIEW WITH HINT(ROUTE_TO(' || :CUR_ROW.VOLUME_ID || '))';
    END FOR;
END;
TRUNCATE TABLE UPDATE_CONFIGURATION_RESULT;
CALL UPDATE_CONFIGURATION();
SELECT * FROM UPDATE_CONFIGURATION_RESULT;
# Installation is complete if you see the following result:
Key	Value	Text
Status	0	OK